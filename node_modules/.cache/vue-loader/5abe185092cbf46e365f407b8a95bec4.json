{"remainingRequest":"/Users/gdezheleha/Documents/refresh/refresh/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/gdezheleha/Documents/refresh/refresh/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/gdezheleha/Documents/refresh/refresh/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/gdezheleha/Documents/refresh/refresh/src/components/beneficiariesPage/index.vue?vue&type=template&id=0dbe6795&scoped=true&","dependencies":[{"path":"/Users/gdezheleha/Documents/refresh/refresh/src/components/beneficiariesPage/index.vue","mtime":1574171001043},{"path":"/Users/gdezheleha/Documents/refresh/refresh/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/gdezheleha/Documents/refresh/refresh/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/gdezheleha/Documents/refresh/refresh/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/gdezheleha/Documents/refresh/refresh/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}