{"remainingRequest":"/Users/gdezheleha/Documents/refresh/refresh/node_modules/babel-loader/lib/index.js!/Users/gdezheleha/Documents/refresh/refresh/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/gdezheleha/Documents/refresh/refresh/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/gdezheleha/Documents/refresh/refresh/src/components/BaseInput/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/gdezheleha/Documents/refresh/refresh/src/components/BaseInput/index.vue","mtime":1574171001041},{"path":"/Users/gdezheleha/Documents/refresh/refresh/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/gdezheleha/Documents/refresh/refresh/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/gdezheleha/Documents/refresh/refresh/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/gdezheleha/Documents/refresh/refresh/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5mbGFncyI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vIGltcG9ydCBNYXNrZWRJbnB1dCBmcm9tICd2dWUtdGV4dC1tYXNrJwpleHBvcnQgZGVmYXVsdCB7CiAgLy8gY29tcG9uZW50czogewogIC8vICAgICBNYXNrZWRJbnB1dCwKICAvLyB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gey8vIGRpcnR5OiBmYWxzZSwKICAgIH07CiAgfSwKICBpbmplY3Q6IFsnJHZhbGlkYXRvciddLAogIG1ldGhvZHM6IHsKICAgIHNhdmVJbmZvOiBmdW5jdGlvbiBzYXZlSW5mbyh2YWwpIHsKICAgICAgdGhpcy4kZW1pdCgnaW5wdXQnLCB2YWwpOwogICAgfQogIH0sCiAgcHJvcHM6IHsKICAgIGhpbnQ6IHsKICAgICAgdHlwZTogU3RyaW5nCiAgICB9LAogICAgdGV4dDogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIHJlcXVpcmVkOiB0cnVlCiAgICB9LAogICAgcmVmZXJlbmNlOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgcmVxdWlyZWQ6IHRydWUKICAgIH0sCiAgICB2YWx1ZTogU3RyaW5nLAogICAgcmVhZG9ubHk6IHsKICAgICAgZGVmYXVsdDogZmFsc2UsCiAgICAgIHR5cGU6IEJvb2xlYW4KICAgIH0sCiAgICB2YWxpZGF0aW9uOiB7CiAgICAgIHR5cGU6IE9iamVjdAogICAgfSwKICAgIHBsYWNlaG9sZGVyOiB7CiAgICAgIHR5cGU6IFN0cmluZwogICAgfSwKICAgIG1hc2s6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiBudWxsCiAgICB9LAogICAgZGlzYWJsZWQ6IHsKICAgICAgZGVmYXVsdDogZmFsc2UsCiAgICAgIHR5cGU6IEJvb2xlYW4KICAgIH0KICB9LAogIGNvbXB1dGVkOiB7CiAgICBkaXJ0eTogZnVuY3Rpb24gZGlydHkoKSB7CiAgICAgIGlmICh0aGlzLiR2YWxpZGF0b3IuZmllbGRzLmZpbmQoewogICAgICAgIG5hbWU6IHRoaXMucmVmZXJlbmNlCiAgICAgIH0pKSB7CiAgICAgICAgcmV0dXJuIHRoaXMuJHZhbGlkYXRvci5maWVsZHMuZmluZCh7CiAgICAgICAgICBuYW1lOiB0aGlzLnJlZmVyZW5jZQogICAgICAgIH0pLmZsYWdzLmRpcnR5OwogICAgICB9CgogICAgICByZXR1cm4gZmFsc2U7CiAgICB9LAogICAgdmFsaWQ6IGZ1bmN0aW9uIHZhbGlkKCkgewogICAgICBpZiAodGhpcy4kdmFsaWRhdG9yLmZpZWxkcy5maW5kKHsKICAgICAgICBuYW1lOiB0aGlzLnJlZmVyZW5jZQogICAgICB9KSkgewogICAgICAgIHJldHVybiB0aGlzLiR2YWxpZGF0b3IuZmllbGRzLmZpbmQoewogICAgICAgICAgbmFtZTogdGhpcy5yZWZlcmVuY2UKICAgICAgICB9KS5mbGFncy52YWxpZDsKICAgICAgfQoKICAgICAgcmV0dXJuIGZhbHNlOwogICAgfSwKICAgIHVudG91Y2hlZDogZnVuY3Rpb24gdW50b3VjaGVkKCkgewogICAgICBpZiAodGhpcy4kdmFsaWRhdG9yLmZpZWxkcy5maW5kKHsKICAgICAgICBuYW1lOiB0aGlzLnJlZmVyZW5jZQogICAgICB9KSkgewogICAgICAgIHJldHVybiB0aGlzLiR2YWxpZGF0b3IuZmllbGRzLmZpbmQoewogICAgICAgICAgbmFtZTogdGhpcy5yZWZlcmVuY2UKICAgICAgICB9KS5mbGFncy50b3VjaGVkOwogICAgICB9CgogICAgICByZXR1cm4gZmFsc2U7CiAgICB9LAogICAgaXNTaG93bkhpbnQ6IGZ1bmN0aW9uIGlzU2hvd25IaW50KCkgewogICAgICByZXR1cm4gdGhpcy5oaW50ICYmICF0aGlzLmVycm9ycy5oYXModGhpcy5yZWZlcmVuY2UpICYmICghdGhpcy5kaXJ0eSB8fCB0aGlzLnVudG91Y2hlZCkgJiYgIXRoaXMudmFsaWQ7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyCA;AAEA,eAAA;AACA;AACA;AACA;AACA,EAAA,IAJA,kBAIA;AACA,WAAA,CACA;AADA,KAAA;AAGA,GARA;AASA,EAAA,MAAA,EAAA,CAAA,YAAA,CATA;AAUA,EAAA,OAAA,EAAA;AACA,IAAA,QADA,oBACA,GADA,EACA;AACA,WAAA,KAAA,CAAA,OAAA,EAAA,GAAA;AACA;AAHA,GAVA;AAeA,EAAA,KAAA,EAAA;AACA,IAAA,IAAA,EAAA;AACA,MAAA,IAAA,EAAA;AADA,KADA;AAIA,IAAA,IAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,QAAA,EAAA;AAFA,KAJA;AAQA,IAAA,SAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,QAAA,EAAA;AAFA,KARA;AAYA,IAAA,KAAA,EAAA,MAZA;AAaA,IAAA,QAAA,EAAA;AACA,MAAA,OAAA,EAAA,KADA;AAEA,MAAA,IAAA,EAAA;AAFA,KAbA;AAiBA,IAAA,UAAA,EAAA;AACA,MAAA,IAAA,EAAA;AADA,KAjBA;AAqBA,IAAA,WAAA,EAAA;AACA,MAAA,IAAA,EAAA;AADA,KArBA;AAyBA,IAAA,IAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAzBA;AA6BA,IAAA,QAAA,EAAA;AACA,MAAA,OAAA,EAAA,KADA;AAEA,MAAA,IAAA,EAAA;AAFA;AA7BA,GAfA;AAiDA,EAAA,QAAA,EAAA;AACA,IAAA,KADA,mBACA;AACA,UAAA,KAAA,UAAA,CAAA,MAAA,CAAA,IAAA,CAAA;AAAA,QAAA,IAAA,EAAA,KAAA;AAAA,OAAA,CAAA,EAAA;AAAA,eAAA,KAAA,UAAA,CAAA,MAAA,CAAA,IAAA,CAAA;AAAA,UAAA,IAAA,EAAA,KAAA;AAAA,SAAA,EAAA,KAAA,CAAA,KAAA;AAAA;;AACA,aAAA,KAAA;AACA,KAJA;AAKA,IAAA,KALA,mBAKA;AACA,UAAA,KAAA,UAAA,CAAA,MAAA,CAAA,IAAA,CAAA;AAAA,QAAA,IAAA,EAAA,KAAA;AAAA,OAAA,CAAA,EAAA;AAAA,eAAA,KAAA,UAAA,CAAA,MAAA,CAAA,IAAA,CAAA;AAAA,UAAA,IAAA,EAAA,KAAA;AAAA,SAAA,EAAA,KAAA,CAAA,KAAA;AAAA;;AACA,aAAA,KAAA;AACA,KARA;AASA,IAAA,SATA,uBASA;AACA,UAAA,KAAA,UAAA,CAAA,MAAA,CAAA,IAAA,CAAA;AAAA,QAAA,IAAA,EAAA,KAAA;AAAA,OAAA,CAAA,EAAA;AAAA,eAAA,KAAA,UAAA,CAAA,MAAA,CAAA,IAAA,CAAA;AAAA,UAAA,IAAA,EAAA,KAAA;AAAA,SAAA,EAAA,KAAA,CAAA,OAAA;AAAA;;AACA,aAAA,KAAA;AACA,KAZA;AAaA,IAAA,WAbA,yBAaA;AACA,aAAA,KAAA,IAAA,IAAA,CAAA,KAAA,MAAA,CAAA,GAAA,CAAA,KAAA,SAAA,CAAA,KAAA,CAAA,KAAA,KAAA,IAAA,KAAA,SAAA,KAAA,CAAA,KAAA,KAAA;AACA;AAfA;AAjDA,CAAA","sourcesContent":["<template>\n    <div class=\"form-group base-input\">\n        <label :for=\"reference\" :class=\"[validation && validation.required && text ? 'asterisk' : '']\">{{text}}</label>\n        <!-- autocomplete=\"off\"-->\n        <input\n                v-if=\"mask\"\n                v-mask=\"mask\"\n                type=\"text\"\n                :class=\"['form-control',validation && validation.required ? 'required-field' : '']\"\n                :id=\"reference\"\n                :placeholder=\"placeholder\"\n                :ref=\"reference\"\n                :value=\"value\"\n                @input=\"$emit('input', $event.target.value)\"\n                :name=\"reference\"\n                v-validate=\"validation\"\n                :readonly=\"readonly\"\n                :disabled=\"disabled\"\n\n        >\n        <input\n                v-else\n                type=\"text\"\n                :class=\"['form-control',validation && validation.required ? 'required-field' : '']\"\n                :id=\"reference\"\n                :placeholder=\"placeholder\"\n                :ref=\"reference\"\n                :value=\"value\"\n                @input=\"$emit('input', $event.target.value)\"\n                :name=\"reference\"\n                v-validate=\"validation\"\n                :readonly=\"readonly\"\n                :disabled=\"disabled\"\n\n        >\n        <p class=\"hints\" v-if=\"isShownHint\">{{hint}}</p>\n        <span class=\"error-msg\">{{errors.first(reference)}}</span>\n    </div>\n</template>\n\n<script>\n// import MaskedInput from 'vue-text-mask'\n\nexport default {\n  // components: {\n  //     MaskedInput,\n  // },\n  data () {\n    return {\n      // dirty: false,\n    }\n  },\n  inject: ['$validator'],\n  methods: {\n    saveInfo (val) {\n      this.$emit('input', val)\n    }\n  },\n  props: {\n    hint: {\n      type: String\n    },\n    text: {\n      type: String,\n      required: true\n    },\n    reference: {\n      type: String,\n      required: true\n    },\n    value: String,\n    readonly: {\n      default: false,\n      type: Boolean\n    },\n    validation: {\n      type: Object\n\n    },\n    placeholder: {\n      type: String\n\n    },\n    mask: {\n      type: String,\n      default: null\n    },\n    disabled: {\n      default: false,\n      type: Boolean\n    }\n  },\n  computed: {\n    dirty () {\n      if (this.$validator.fields.find({ name: this.reference })) { return this.$validator.fields.find({ name: this.reference }).flags.dirty }\n      return false\n    },\n    valid () {\n      if (this.$validator.fields.find({ name: this.reference })) { return this.$validator.fields.find({ name: this.reference }).flags.valid }\n      return false\n    },\n    untouched () {\n      if (this.$validator.fields.find({ name: this.reference })) { return this.$validator.fields.find({ name: this.reference }).flags.touched }\n      return false\n    },\n    isShownHint () {\n      return this.hint && !this.errors.has(this.reference) && (!this.dirty || this.untouched) && !this.valid\n    }\n  }\n}\n</script>\n\n<style scoped lang=\"scss\">\n    .base-input {\n        width: 100%;\n\n        label {\n            color: #434343;\n            font-family: \"Century Gothic\";\n            font-size: 16px;\n            font-weight: 700;\n            line-height: 27px;\n        }\n    }\n\n    input {\n        height: 36px;\n    }\n\n    .asterisk {\n        &::after {\n            content: \"*\";\n            color: #b44284;\n            font-family: Calibri;\n            font-weight: 400;\n            font-size: 16px;\n            /*float: left;*/\n        }\n    }\n\n    .required-field {\n        border-color: #9db488;\n    }\n</style>\n"],"sourceRoot":"src/components/BaseInput"}]}