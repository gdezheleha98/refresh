{"remainingRequest":"/Users/gdezheleha/Documents/refresh/refresh/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/gdezheleha/Documents/refresh/refresh/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/gdezheleha/Documents/refresh/refresh/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/gdezheleha/Documents/refresh/refresh/src/components/cards/cardsDescription/index.vue?vue&type=template&id=42b5e818&scoped=true&","dependencies":[{"path":"/Users/gdezheleha/Documents/refresh/refresh/src/components/cards/cardsDescription/index.vue","mtime":1574165974385},{"path":"/Users/gdezheleha/Documents/refresh/refresh/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/gdezheleha/Documents/refresh/refresh/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/gdezheleha/Documents/refresh/refresh/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/gdezheleha/Documents/refresh/refresh/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}