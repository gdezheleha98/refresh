{"remainingRequest":"/Users/gdezheleha/Documents/refresh/refresh/node_modules/babel-loader/lib/index.js!/Users/gdezheleha/Documents/refresh/refresh/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/gdezheleha/Documents/refresh/refresh/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/gdezheleha/Documents/refresh/refresh/src/components/cards/orderCard/BaseComponents/BaseCheckbox/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/gdezheleha/Documents/refresh/refresh/src/components/cards/orderCard/BaseComponents/BaseCheckbox/index.vue","mtime":1574171001068},{"path":"/Users/gdezheleha/Documents/refresh/refresh/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/gdezheleha/Documents/refresh/refresh/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/gdezheleha/Documents/refresh/refresh/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/gdezheleha/Documents/refresh/refresh/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KZXhwb3J0IGRlZmF1bHQgewogIGluamVjdDogWyckdmFsaWRhdG9yJ10sCiAgbW9kZWw6IHsKICAgIHByb3A6ICdjaGVja2VkJywKICAgIGV2ZW50OiAnY2hhbmdlJwogIH0sCiAgcHJvcHM6IHsKICAgIHRleHQ6IFN0cmluZywKICAgIHJlZmVyZW5jZTogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIHJlcXVpcmVkOiB0cnVlCiAgICB9LAogICAgY2hlY2tlZDogQm9vbGVhbiwKICAgIHZhbGlkYXRpb246IHsKICAgICAgdHlwZTogT2JqZWN0CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAsBA,eAAA;AACA,EAAA,MAAA,EAAA,CAAA,YAAA,CADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,IAAA,EAAA,SADA;AAEA,IAAA,KAAA,EAAA;AAFA,GAFA;AAMA,EAAA,KAAA,EAAA;AACA,IAAA,IAAA,EAAA,MADA;AAEA,IAAA,SAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,QAAA,EAAA;AAFA,KAFA;AAMA,IAAA,OAAA,EAAA,OANA;AAOA,IAAA,UAAA,EAAA;AACA,MAAA,IAAA,EAAA;AADA;AAPA;AANA,CAAA","sourcesContent":["<template>\n    <div>\n        <div class=\"base-checkbox form-check form-check-inline col-md-12\">\n            <input\n                    class=\"form-check-input\"\n                    type=\"checkbox\"\n                    :id=\"reference\"\n                    :checked=\"checked\"\n                    @change=\"$emit('change', $event.target.checked)\"\n                    :ref=\"reference\"\n                    :name=\"reference\"\n                    data-vv-validate-on=\"input\"\n                    v-validate=\"validation\"\n            >\n            <label class=\"form-check-label\" :for=\"reference\">{{text}}</label>\n        </div>\n        <span class=\"error-msg\">{{errors.first(reference)}}</span>\n    </div>\n\n</template>\n\n<script>\nexport default {\n  inject: ['$validator'],\n  model: {\n    prop: 'checked',\n    event: 'change'\n  },\n  props: {\n    text: String,\n    reference: {\n      type: String,\n      required: true\n    },\n    checked: Boolean,\n    validation: {\n      type: Object\n    }\n  }\n}\n</script>\n\n<style scoped lang=\"scss\">\n    .base-checkbox {\n        /*padding: 0 5px;*/\n        display: flex;\n        align-items: flex-start;\n        input {\n            margin-top: 3px;\n        }\n        label {\n            line-height: 1.1;\n        }\n    }\n</style>\n"],"sourceRoot":"src/components/cards/orderCard/BaseComponents/BaseCheckbox"}]}